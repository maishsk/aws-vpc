---
- name: Create a dictionary of tags 
  set_fact:
    tags_dict: "{{ tags_dict|default({}) |  combine(item.1) }}"
  with_indexed_items: "{{ tags }}"
  when: (tags is defined and create is defined)

- name: Create a VPC 
  ec2_vpc_net:
    name: "{{ vpc_name }}"
    cidr_block: "{{ vpc_cidr_block }}"
    region: "{{ region }}"
    state: present
    dns_support: "{{ enable_dns_support | default ('true') }}"
    dns_hostnames: "{{ enable_dns_hostnames | default ('true') }}"
    multi_ok: "{{ vpc_multi_ok | default (omit) }}"
    tenancy: "{{ vpc_tenancy | default (omit) }}"
    tags: 
      "{{ tags_dict | default (omit) }}" 
  when: create is defined
  register: vpc_output

- name: Create a Internet Gateway 
  ec2_vpc_igw:
    region: "{{ region }}"
    vpc_id: "{{ vpc_output.vpc.id }}"
    state: present
    tags: 
      "{{ tags_dict | default (omit) }}" 
  when: create is defined
  register: igw_output

# - name: Debug
#   debug:
#     var: igw_output
#     verbosity: 4
- name: Gather facts about VPC
  ec2_vpc_net_facts:
    filters:
      "tag:Name": "{{ vpc_name }}"
  register: vpc_fact    

- name: Debug
  debug:
    var: vpc_facts
    verbosity: 4

# - name: Gather facts about a specific internet gateway by InternetGatewayId
#   ec2_vpc_igw_facts:
#     region: "{{ region }}"
#     internet_gateway_ids: "{{ igw_output.gateway_id }}"
#   register: igw_facts

# - name: Debug
#   debug:
#     var: igw_facts
#     verbosity: 4

- name: Remove the IGW
  ec2_vpc_igw:
    vpc_id: "{{ vpc_output.vpc.id }}"
    region: "{{ region }}"
    state: absent
  when: remove is defined

# - name: Remove a VPC 
#   ec2_vpc_net:
#     name: "{{ vpc_name }}"
#     region: "{{ region }}"
#     cidr_block: "{{ vpc_cidr_block }}"
#     state: absent
#   when: remove is defined
